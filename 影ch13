# -*- coding: utf-8 -*-
"""
Created on Fri Dec 16 10:25:38 2022

@author: CJCU-User
"""

import matplotlib.pyplot as plt
import skimage.io as io
import numpy as np
nxyz=np.loadtxt("ciexyz31.txt",delimiter=",")
xyz=nxyz[:,1:]
sums=xyz.sum(axis=1)
newxyz=xyz/sums[:,np.newaxis]
x=newxyz[:,0];x1=np.hstack((x,x[0]))
y=newxyz[:,1];y1=np.hstack((y,y[0]))
plt.plot(x1,y1)


# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

import matplotlib.pyplot as plt
import skimage.io as io
import numpy as np
import skimage.color as co
x=io.imread("twins.jpg")
xh=co.rgb2hsv(x)
for i in range(3):
    plt.figure(i),io.imshow(x[:,:,0])  #紅
    plt.figure(i),io.imshow(x[:,:,1])  #綠
    plt.figure(i),io.imshow(x[:,:,2])  #藍
    plt.figure(i),io.imshow(xh[:,:,i])  #色調、飽和度、明暗度



#加強對比
# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
import skimage.io as io
import numpy as np
import skimage.exposure as ex
from matplotlib.pyplot import figure
s=io.imread("color_sunset.png").astype("float64")
s2=np.zeros_like(s)
for i in range(3):
    s2[:,:,i]=ex.equalize_hist(s[:,:,i])
figure(),io.imshow(s2)
#HSV
import skimage.color as co
sh=co.rgb2hsv(s)
sh[:,:,2]=ex.equalize_hist(sh[:,:,2])
s3=co.hsv2rgb(sh)
figure(),io.imshow(s3)


# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""


import skimage.io as io
import numpy as np
import skimage.exposure as ex
from matplotlib.pyplot import figure
import skimage.color as co
from scipy.ndimage import filters as fl
v=io.imread("venice.png")
vg=co.rgb2gray(v)
vel=fl.sobel(vg)>0.11

v2=np.zero_like(v)
for i in range(3):
    v2[:,:,i]=fl.sobel(v[:,:,i])>0.11
ve2=(v2[:,:,0]+v2[:,:,1]+v2[:,:,2])>0


#Retinex演算
# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

import skimage.io as io
import numpy as np
import skimage.color as co
import skimage.exposure as ex

from numpy.fft import ifft2
from numpy.fft import fft2
from skimage.util import img_as_float
s=img_as_float(co.rgb2gray(io.imread("street.png")))
s1=ex.rescale_intensity(s,out_range=(0,1))+0.01
io.imshow(s,cmap="gray")
r,c=s.shape
i,j=np.mgrid[-(r//2):(r+1)//2,-(c//2):(c+1)//2]
f=np.exp(-(i**2+j**2)/40**2)
sf=abs(ifft2(ifft2(s1)*fft2(f)))

sf[np.where(sf==0)]=0.01
s2=np.log(s1)-np.log(sf)
io.imshow(s2,cmap="gray")
